// <auto-generated />
using System;
using CoreSimpam.Model.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreSimpam.Model.Migrations
{
    [DbContext(typeof(SimpamDBContext))]
    [Migration("20210429090028_changeNameColumn")]
    partial class changeNameColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreSimpam.Model.CustomerModel", b =>
                {
                    b.Property<long>("customerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("customeraddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customernumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("residentid")
                        .HasColumnType("bigint");

                    b.HasKey("customerid");

                    b.ToTable("customer", "customer");
                });

            modelBuilder.Entity("CoreSimpam.Model.ResidentModel", b =>
                {
                    b.Property<long>("residentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("residentname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("residentnumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("residentid");

                    b.ToTable("resident", "customer");
                });

            modelBuilder.Entity("CoreSimpam.Model.RoleModel", b =>
                {
                    b.Property<long>("roleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("createdby")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isenabled")
                        .HasColumnType("bit");

                    b.Property<string>("rolename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("updatedby")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("updateddate")
                        .HasColumnType("datetime2");

                    b.HasKey("roleid");

                    b.ToTable("roles", "common");

                    b.HasData(
                        new
                        {
                            roleid = 1L,
                            createdby = 0L,
                            createddate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isenabled = true,
                            rolename = "root"
                        });
                });

            modelBuilder.Entity("CoreSimpam.Model.RoleScreenModel", b =>
                {
                    b.Property<long>("rolescreenid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("createdby")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("deleteflag")
                        .HasColumnType("bit");

                    b.Property<bool>("readflag")
                        .HasColumnType("bit");

                    b.Property<long>("roleid")
                        .HasColumnType("bigint");

                    b.Property<long>("screenid")
                        .HasColumnType("bigint");

                    b.Property<long?>("updatedby")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("updateddate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("writeflag")
                        .HasColumnType("bit");

                    b.HasKey("rolescreenid");

                    b.HasIndex("roleid");

                    b.HasIndex("screenid");

                    b.ToTable("rolescreen", "common");
                });

            modelBuilder.Entity("CoreSimpam.Model.ScreenModel", b =>
                {
                    b.Property<long>("screenid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("actionname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("controllername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iconcss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("ismenu")
                        .HasColumnType("bit");

                    b.Property<long>("parentid")
                        .HasColumnType("bigint");

                    b.Property<string>("screenname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("screenid");

                    b.ToTable("screen", "common");
                });

            modelBuilder.Entity("CoreSimpam.Model.TransactionModel", b =>
                {
                    b.Property<long>("trxid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("createdby")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("trxdate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("updatedby")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("updateddate")
                        .HasColumnType("datetime2");

                    b.HasKey("trxid");

                    b.ToTable("trx", "billing");
                });

            modelBuilder.Entity("CoreSimpam.Model.TrxItemModel", b =>
                {
                    b.Property<long>("trxitemid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("afteramount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("beforeamount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<long>("customerid")
                        .HasColumnType("bigint");

                    b.Property<bool>("isclear")
                        .HasColumnType("bit");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("qty")
                        .HasColumnType("decimal(18,4)");

                    b.Property<long>("trxid")
                        .HasColumnType("bigint");

                    b.HasKey("trxitemid");

                    b.ToTable("trxitem", "billing");
                });

            modelBuilder.Entity("CoreSimpam.Model.UserModel", b =>
                {
                    b.Property<long>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("roleid")
                        .HasColumnType("bigint");

                    b.Property<string>("salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userid");

                    b.HasIndex("roleid")
                        .IsUnique();

                    b.ToTable("users", "common");
                });

            modelBuilder.Entity("CoreSimpam.Model.RoleScreenModel", b =>
                {
                    b.HasOne("CoreSimpam.Model.RoleModel", "role")
                        .WithMany("rolescreens")
                        .HasForeignKey("roleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreSimpam.Model.ScreenModel", "screen")
                        .WithMany()
                        .HasForeignKey("screenid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");

                    b.Navigation("screen");
                });

            modelBuilder.Entity("CoreSimpam.Model.UserModel", b =>
                {
                    b.HasOne("CoreSimpam.Model.RoleModel", "role")
                        .WithOne("user")
                        .HasForeignKey("CoreSimpam.Model.UserModel", "roleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });

            modelBuilder.Entity("CoreSimpam.Model.RoleModel", b =>
                {
                    b.Navigation("rolescreens");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
